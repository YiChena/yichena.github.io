(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{450:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),s("p",[t._v("clear 清空")]),t._v(" "),s("h3",{attrs:{id:"创建文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建文件"}},[t._v("#")]),t._v(" 创建文件")]),t._v(" "),s("p",[t._v("touch file02.txt")]),t._v(" "),s("h3",{attrs:{id:"查看修改的状态-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看修改的状态-status"}},[t._v("#")]),t._v(" 查看修改的状态（status）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用：查看的修改的状态（暂存区、工作区）")])]),t._v(" "),s("li",[s("p",[t._v("命令形式：git status")])])]),t._v(" "),s("h3",{attrs:{id:"添加工作区到暂存区-add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加工作区到暂存区-add"}},[t._v("#")]),t._v(" 添加工作区到暂存区(add)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用：添加工作区一个或多个文件的修改到暂存区")])]),t._v(" "),s("li",[s("p",[t._v("命令形式：git add 单个文件名|通配符")]),t._v(" "),s("ul",[s("li",[t._v("将所有修改加入暂存区：git add .")])])])]),t._v(" "),s("h3",{attrs:{id:"提交暂存区到本地仓库-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交暂存区到本地仓库-commit"}},[t._v("#")]),t._v(" 提交暂存区到本地仓库(commit)")]),t._v(" "),s("ul",[s("li",[t._v("作用：提交暂存区内容到本地仓库的当前分支")]),t._v(" "),s("li",[t._v("命令形式：git commit -m '注释内容")])]),t._v(" "),s("h3",{attrs:{id:"查看提交日志-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看提交日志-log"}},[t._v("#")]),t._v(" 查看提交日志(log)")]),t._v(" "),s("ul",[s("li",[t._v("作用:查看提交记录")]),t._v(" "),s("li",[t._v("命令形式：git log [option]\n"),s("ul",[s("li",[t._v("options\n"),s("ul",[s("li",[t._v("--all 显示所有分支")]),t._v(" "),s("li",[t._v("--pretty=oneline 将提交信息显示为一行")]),t._v(" "),s("li",[t._v("--abbrev-commit 使得输出的commitId更简短")]),t._v(" "),s("li",[t._v("--graph 以图的形式显示")])])])])])]),t._v(" "),s("p",[t._v("$ git log --pretty=oneline --abbrev-commit")]),t._v(" "),s("p",[t._v("$ git log --pretty=oneline --abbrev-commit --all --graph")]),t._v(" "),s("h3",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用：版本切换")])]),t._v(" "),s("li",[s("p",[t._v("命令形式：git reset --hard commitID")]),t._v(" "),s("ul",[s("li",[t._v("commitID 可以使用 git-log 或 git log 指令查看")])])]),t._v(" "),s("li",[s("p",[t._v("如何查看已经删除的记录？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("git reflog")])]),t._v(" "),s("li",[s("p",[t._v("这个指令可以看到已经删除的提交记录")])])])])]),t._v(" "),s("h3",{attrs:{id:"添加文件至忽略列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加文件至忽略列表"}},[t._v("#")]),t._v(" 添加文件至忽略列表")]),t._v(" "),s("p",[t._v("一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动 生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录 中创建一个名为 .gitignore 的文件（文件名称固定）")]),t._v(" "),s("h3",{attrs:{id:"分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),s("p",[t._v("几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离 开来进行重大的Bug修改、开发新的功能，以免影响开发主线。")]),t._v(" "),s("h4",{attrs:{id:"查看本地分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看本地分支"}},[t._v("#")]),t._v(" 查看本地分支")]),t._v(" "),s("ul",[s("li",[t._v("命令：git branch")])]),t._v(" "),s("h4",{attrs:{id:"创建本地分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建本地分支"}},[t._v("#")]),t._v(" 创建本地分支")]),t._v(" "),s("ul",[s("li",[t._v("命令：git branch 分支名")])]),t._v(" "),s("h4",{attrs:{id:"切换分支-checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换分支-checkout"}},[t._v("#")]),t._v(" *切换分支(checkout)")]),t._v(" "),s("ul",[s("li",[t._v("命令：git checkout 分支名")])]),t._v(" "),s("p",[t._v("我们还可以直接切换到一个不存在的分支（创建并切换）")]),t._v(" "),s("ul",[s("li",[t._v("命令：git checkout -b 分支名")])]),t._v(" "),s("h4",{attrs:{id:"合并分支-merge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支-merge"}},[t._v("#")]),t._v(" *合并分支(merge)")]),t._v(" "),s("p",[t._v("一个分支上的提交可以合并到另一个分支")]),t._v(" "),s("p",[t._v("命令：git merge 分支名称")]),t._v(" "),s("h4",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("p",[t._v("不能删除当前分支，只能删除其他分支")]),t._v(" "),s("p",[t._v("git branch -d b1 删除分支时，需要做各种检查")]),t._v(" "),s("p",[t._v("git branch -D b1 不做任何检查，强制删除")]),t._v(" "),s("h4",{attrs:{id:"开发中分支使用原则与流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发中分支使用原则与流程"}},[t._v("#")]),t._v(" 开发中分支使用原则与流程")]),t._v(" "),s("p",[t._v("几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离 开来进行重大的Bug修改、开发新的功能，以免影响开发主线。")]),t._v(" "),s("p",[t._v("在开发中，一般有如下分支使用原则与流程：")]),t._v(" "),s("ul",[s("li",[t._v("master （生产） 分支")])]),t._v(" "),s("p",[t._v("线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；")]),t._v(" "),s("ul",[s("li",[t._v("develop（开发）分支")])]),t._v(" "),s("p",[t._v("是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线 要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。")]),t._v(" "),s("ul",[s("li",[t._v("feature/xxxx分支")])]),t._v(" "),s("p",[t._v("从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完 成后合并到develop分支。")]),t._v(" "),s("ul",[s("li",[t._v("hotfix/xxxx分支，")])]),t._v(" "),s("p",[t._v("从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、 develop分支。")]),t._v(" "),s("ul",[s("li",[t._v("还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等 等。")])]),t._v(" "),s("h4",{attrs:{id:"分支操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###########################创建并切换到dev01分支，在dev01分支提交")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]创建分支dev01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch dev01\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]切换到dev01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev01\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [dev01]创建文件file02.txt")]),t._v("\n略\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [dev01]将修改加入暂存区并提交到仓库,提交记录内容为：add file02 on dev")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add file02 on dev'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [dev01]以精简的方式显示提交记录")]),t._v("\ngit-log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###########################切换到master分支，将dev01合并到master分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [dev01]切换到master分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]合并dev01到master分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev01\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]以精简的方式显示提交记录")]),t._v("\ngit-log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]查看文件变化(目录下也出现了file02.txt)")]),t._v("\n略\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##########################删除dev01分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]删除dev01分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" dev01\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [master]以精简的方式显示提交记录")]),t._v("\ngit-log\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br")])]),s("h3",{attrs:{id:"git远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git远程仓库"}},[t._v("#")]),t._v(" Git远程仓库")])])}),[],!1,null,null,null);s.default=r.exports}}]);